FORMAT: 1A
HOST: http://synctest.stratafleet.com/api

# StrataSync

StrataSync is a simple API allowing operator to upload their schedule to Stratafleet.

**This API requires an API key provided by Stratajet to be consumed.**

Please contact the integration team if you have any questions or if you need to be set up with an API key :

Live chat on Gitter (recommended): https://gitter.im/Stratajet/StrataSync

Email: integrations@stratajet.com

Tel: +44 203 397 4612


## Events [/events]
This is the RESTful way to update the schedule. Create and update single events using the following actions.

+ Attributes
    + data_source_unique_id: `550e8400-e29b-41d4-a716-446655440000` (string, required) - The identifier used by the integration provider to identify the event. We recommend using UUID but any other unique identifier can be used instead. **Must be unique**.
    + registration_mark: `G-ABCD` (string, required) - The registration mark of the aircraft involved in the event. If it doesn't exist upon creation of the event, a new aircraft will be created with the registration mark provided.
    + start_time: `2016-06-01T12:00Z` (string, required) - The start time of an aircraft event, in zulu.
    + end_time: `2016-06-01T14:00Z` (string, required) - The end time of an aircraft event, in zulu.
    + start_airfield: `EGTK` (string, required) - ICAO code representing the location of the aircraft at the start of the event.
    + end_airfield: `LFPB` (string, required) - ICAO code representing the location of the aircraft at the end of the event. Can be the same as start airfield.
    + utilization: `PAX` (enum[string], required) - A string representing the activity of the aircraft. 
      + Members
        + `CARGO` - Aircraft is carrying cargo.
        + `EMPTY` - Aircraft is flying with no PAX and __can be replaced__ with a revenue flight
        + `MAINTENANCE` - Aircraft is undergoing maintenance
        + `OPERATIONAL` - Aircraft is being used for a flight that is not replaceable
        + `OPTION` - Aircraft has been optioned, but not confirmed. For all intents and purposes, this type of event is ignored
        + `PAX` - Aircraft is flying with PAX
        + `PRIVATE` - Aircraft is being used by the owner
        + `TRAINING` - Aircraft is being used for training
        + `UNCLASSIFIED` - Aircraft is being used for a purpose
    + utilization_count (number, required) - If the utilization is cargo, the value is the weight of cargo in kg. Otherwise, the value indicate the number of passengers
    + deleted (boolean, required) - Indicates whether an aircraft event has been deleted. Ie. it has been previously submitted to the webservice, but has since been removed.

### Create an event [POST]

You may create a single event using this action. It takes a JSON
object containing the details and eventually your own identifier (must be unique).
    
+ Request With a valid payload (application/json)

    + Headers

            Authorization: Token token="your token"
            Accept: application/json

    + Body

            {
                "event": {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-06-01T12:00Z",
                    "end_time": "2016-06-01T14:00Z",
                    "start_airfield": "EGTK",
                    "end_airfield": "LFPB",
                    "utilization": "PAX",
                    "utilization_count": "2",
                    "deleted": "false",
                    "data_source_unique_id": "550e8400-e29b-41d4-a716-446655440000"
                }
            } 



+ Response 201 (application/json)
    **Created**. When the event was successfully created

    + Headers

              Location: /events/42

    + Body

            {
                "event": {
                  "registration_mark": "X-XXXX",
                  "start_time": "2016-06-01T12:00Z",
                  "end_time": "2016-06-01T14:00Z",
                  "start_airfield": "EGTK",
                  "end_airfield": "LFPB",
                  "utilization": "PAX",
                  "utilization_count": "2",
                  "deleted": "false",
                  "data_source_unique_id": "550e8400-e29b-41d4-a716-446655440000"
                }
            }


+ Response 401 (application/json)
    **Unauthorized**. When the token is missing or incorrect.

    + Body

            {
               "message": "unauthorized"
            }



+ Request With an invalid payload (application/json)

    + Headers

            Authorization: Token token="your token"
            Accept: application/json

    + Body

            {
                "event": {
                    "registration_mark": "",
                    "start_time": "2016-06-01T12:00Z",
                    "end_time": "2016-06-01",
                    "start_airfield": "EGTK",
                    "end_airfield": "1234",
                    "utilization": "PAX",
                    "utilization_count": "2",
                    "deleted": "false",
                    "data_source_unique_id": "550e8400-e29b-41d4-a716-446655440000"
                }
            } 

+ Response 422 (application/json)
  **422** Unprocessable entity. Here is a list of possible error strings :
  - Utilization XXX is an invalid use
  - Aircraft can't be blank
  - Arrival time can't be blank
  - Arrival time format must be yyyy-mm-ddThh:mmZ
  - Departure time can't be blank
  - Departure time format must be yyyy-mm-ddThh:mmZ
  - Data source unique can't be blank
  - Utilization count is not a number
  - From airfield is not a valid ICAO code
  - To airfield is not a valid ICAO code

    + Body

            {
              "errors": [
                {"details" : "Aircraft can't be blank"}, 
                {"details" : "To airfield is not a valid ICAO code"},
                {"details" : "Arrival time format must be yyyy-mm-ddThh:mmZ"}
              ]
            }


### Update an event [PUT /events/:id]

You may partially update a single event using this action. It takes a JSON object containing the attributes to update and returns the updated resource as in a single `GET` request. 
You can use this action to delete an event by passing the attribute `"deleted": true`.

+ Request with a valid payload (application/json)

    + Headers

            Authorization: Token token="your token"
            Accept: application/json

    + Body

            {
                "event": {
                    "start_time": "2016-06-01T13:00Z",
                    "end_time": "2016-06-01T15:00Z",
                    "start_airfield": "EGSH",
                    "utilization_count": "3"
                }
            } 

+ Response 200 (application/json)
    **OK** When the resource was successfully updated.

    + Headers

            Location: /events/42

    + Body

            {
               "event": {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-06-01T13:00Z",
                    "end_time": "2016-06-01T15:00Z",
                    "start_airfield": "EGSH",
                    "end_airfield": "LFPB",
                    "utilization": "PAX",
                    "utilization_count": "3",
                    "deleted": "false",
                    "data_source_unique_id": "550e8400-e29b-41d4-a716-446655440000"
                }
            }


+ Response 401 (application/json)
    **Unauthorized**. When the token is missing or incorrect.

    + Body

            {
               "message": "unauthorized"
            }



+ Response 404 (application/json)
  **Not found**. When the event identified in the URL is doesn't exist.
  
      + Body


+ Request with an invalid payload (application/json)
    + Headers

            Authorization: Token token="your token"
            Accept: application/json

    + Body

            {
                "event": {
                    "start_airfield": "EGCC",
                    "data_source_unique_id": ""
                }
            }

+ Response 422 (application/json)
  **Unprocessable entity**. When the payload submitted doesn't allow to update the event. Here is a list of possible error strings :
  - Utilization XXX is an invalid use
  - Aircraft can't be blank
  - Arrival time can't be blank
  - Arrival time format must be yyyy-mm-ddThh:mmZ
  - Departure time can't be blank
  - Departure time format must be yyyy-mm-ddThh:mmZ
  - Data source unique can't be blank
  - Utilization count is not a number
  - From airfield is not a valid ICAO code
  - To airfield is not a valid ICAO code


    + Body

            {
                "errors": 
                [
                    {details: "Data source unique can't be blank"}
                ]
            }

## Schedule - bulk actions [/schedules]
This is a set of convenient actions to update the schedule with bulk actions (multiple events).

### Recreate the schedule [POST]
Use this action to replace the entire schedule or a part of the schedule defined by a date range.
This is typically best suited to situations when the events of the schedule do not have unique ids.

+ Request (application/json)
    + Headers

            Authorization: Token token="your token"
            Accept: application/json

    + Body

            {
                "events": [
                  {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-06-01T13:00Z",
                    "end_time": "2016-06-01T15:00Z",
                    "start_airfield": "EGSH",
                    "end_airfield": "LFPB",
                    "utilization": "PAX",
                    "utilization_count": "3",
                    "deleted": "false"
                  },
                  {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-06-03T09:00Z",
                    "end_time": "2016-06-03T11:30Z",
                    "start_airfield": "EBBR",
                    "end_airfield": "EGTK",
                    "utilization": "EMPTY",
                    "utilization_count": "0",
                    "deleted": "false",
                    "data_source_unique_id": "660e8400-e29b-41d4-a716-4466554412324"
                  },
                  {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-07-04T09:00Z",
                    "end_time": "2016-07-04T11:30Z",
                    "start_airfield": "LFPB",
                    "end_airfield": "EBBR",
                    "utilization": "PAX",
                    "utilization_count": "1",
                    "deleted": "true",
                    "data_source_unique_id": "770e8400-e29b-41d4-a716-4466554415678"
                  }
                ]
            } 

+ Response 202 (application/json)
    **Accepted**. The request to create the schedule has been accepted for processing

    + Body


+ Response 400
    **Bad Request**. Some of the events submitted were not valid. A list of error will be returned as shown below.

    + Headers

            Content-Type: application/json

    + Body

            {
              "errors":
                [
                    {
                        "details" : "To airfield is not a valid ICAO code",
                        "meta": {"index": 450}
                    }
                ]
            }


### Update the schedule [PUT]

Use this action to update multiple events. Events that have been deleted from the operator’s schedule must exist in the data submitted with the attribute `deleted` set to `true`.

+ Request (application/json)

    + Headers

            Authorization: Token token="your token"
            Accept: application/json

    + Body

            {
            "events": [
                {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-06-01T13:00Z",
                    "end_time": "2016-06-01T15:00Z",
                    "start_airfield": "EGSH",
                    "end_airfield": "LFPB",
                    "utilization": "PAX",
                    "utilization_count": "3",
                    "deleted": "false",
                    "data_source_unique_id": "550e8400-e29b-41d4-a716-446655440000"
              },
              {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-06-03T09:00Z",
                    "end_time": "2016-06-03T11:30Z",
                    "start_airfield": "EBBR",
                    "end_airfield": "EGTK",
                    "utilization": "EMPTY",
                    "utilization_count": "0",
                    "deleted": "false",
                    "data_source_unique_id": "660e8400-e29b-41d4-a716-4466554412324"
              },
              {
                    "registration_mark": "X-XXXX",
                    "start_time": "2016-07-04T09:00Z",
                    "end_time": "2016-07-04T11:30Z",
                    "start_airfield": "LFPB",
                    "end_airfield": "EBBR",
                    "utilization": "PAX",
                    "utilization_count": "1",
                    "deleted": "true",
                    "data_source_unique_id": "770e8400-e29b-41d4-a716-4466554415678"
              }
            ]
            } 

+ Response 202 (application/json)
    **Accepted**. The request to create the schedule has been accepted for processing

    + Body


+ Response 400
    **Bad Request**. Some of the events submitted were not valid. A list of error will be returned as shown below.

    + Body

            {
                "errors": 
                [
                    {
                        "details" : "Aircraft can't be blank",
                        "meta": {"index": 42}
                    }
                ]
              }